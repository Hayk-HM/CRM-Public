{"version":3,"sources":["api/API.js","components/MainPage/Chat/Chat.js","redux/actions/authActions.js","components/LogInForm/SignUp/SignUp.js","components/LogInForm/SignIn/SignIn.js","components/LogInForm/InfoList/InfoList.js","components/images/logo.png","components/LogInForm/Header/Header.js","components/LogInForm/Home/Home.js","components/MainPage/Register/RegistrationSuccess/Style.js","components/MainPage/Register/RegistrationSuccess/RegistrationSuccess.js","components/icons/EmployeesIcon.js","components/icons/RegisterIcon.js","components/icons/SettingsIcon.js","components/icons/AccountIcon.js","components/icons/ChatIcon.js","components/icons/TaskIcon.js","components/MainPage/Employees/AddEmployeButton/Style.js","components/MainPage/Employees/AddEmployeButton/AddEmployeButton.js","components/MainPage/Employees/Employee/Style.js","components/MainPage/Employees/Employee/Employee.js","components/MainPage/Employees/Employees.js","components/MainPage/Register/Register.js","components/MainPage/Settings/Settings.js","redux/actions/userActions.js","components/MainPage/Account/Style.js","components/MainPage/Account/Account.js","redux/actions/tasksActions.js","components/MainPage/Tasks/TaskCreateForm/Style.js","components/MainPage/Tasks/TaskCreateForm/TaskCreateForm.js","components/MainPage/Tasks/AddTaskButton/Style.js","components/MainPage/Tasks/AddTaskButton/AddTaskButton.js","redux/actions/updateTask.js","components/MainPage/Tasks/TaskElement/Style.js","components/MainPage/Tasks/TaskElement/TaskElement.js","components/MainPage/Tasks/Style.js","components/MainPage/Tasks/Tasks.js","redux/actions/chatActions.js","components/MainPage/Chat/ChatElement/Style.js","components/MainPage/Chat/ChatElement/ChatElement.js","components/MainPage/Chat/ChatContainer/ChatContainer.js","components/MainPage/Chat/InputForm/Style.js","components/MainPage/Chat/InputForm/InputForm.js","components/MainPage/DashboardSidebar/Style.js","components/MainPage/DashboardSidebar/DashboardSidebar.js","components/MainPage/DashboardNavbar/Style.tsx","components/MainPage/DashboardNavbar/DashboardNavbar.js","components/MainPage/Dashboard.js","App.js","redux/reducers/authReducer.js","redux/reducers/taskReducer.js","redux/reducers/usersReducer.js","redux/reducers/updatedTaskId.js","redux/reducers/chatReducer.js","redux/store/store.js","index.tsx"],"names":["instance","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","socket","authApi","newCompanyInfo","post","newEmployeeInfo","formData","userApi","company","get","id","taskApi","patch","chatApi","chatDate","authActions","type","SignUp","dispatch","useDispatch","history","useHistory","Container","component","maxWidth","Helmet","enableReinitialize","initialValues","email","firstName","lastName","password","policy","validationSchema","Yup","shape","max","required","confirmPassword","oneOf","onSubmit","values","a","data","push","console","log","signUpAction","errors","handleBlur","handleChange","isSubmitting","touched","handleSubmit","Box","sx","mb","Typography","color","variant","align","gutterBottom","TextField","error","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","value","alignItems","display","ml","Checkbox","checked","RouterLink","to","underline","FormHelperText","py","Button","disabled","size","SignIn","resetForm","signinAction","InfoList","className","Header","useState","user","src","logo","alt","onClick","removeItem","Home","path","render","useStyles","makeStyles","theme","root","width","flexDirection","justifyContent","buttons","marginTop","spacing","button","rootGrid","RegistrationSuccess","classes","Grid","container","item","elevation","severity","EmployeesIcon","xmlns","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","class","d","cx","cy","r","RegisterIcon","x1","y1","x2","y2","SettingsIcon","AccountIcon","ChatIcon","TaskIcon","x","y","rx","ry","fab","AddEmployeeButton","Tooltip","title","aria-label","Fab","large","marginRight","Employee","photo","fullName","location","phone","store","TableBody","tableContainer","TableRow","hover","TableCell","Avatar","Employees","users","useSelector","element","Card","TableContainer","Table","TableHead","map","Register","userCompany","result","backgroundColor","signupEmployeeAction","Link","Settings","usersAction","updatedInfo","flexGrow","paper","padding","image","img","maxHeight","avatar","lime","Account","Paper","ButtonBase","charAt","toUpperCase","String","userId","_id","taskActions","tasks","marginBottom","closeButton","TaskCreateForm","handleClose","state","closeTaskBare","Close","taskTitle","taskDescription","urgency","creatorId","creatorName","createdFor","multiline","rows","select","MenuItem","backdrop","zIndex","drawer","AddTaskButton","open","setOpen","Backdrop","updateTaskAction","wrapper","position","svg","polygon","palette","common","white","divider","strokeWidth","TaskElement","creator","description","status","handleToggle","updateButton","gridContainer","Tasks","task","filter","updateTaskId","React","creatorPhoto","createdAt","moment","format","createdAtFromNow","fromNow","comment","chatActions","chatData","chat","mainGrid","innerGrid","ChatElement","message","ChatContainer","messages","textField","InputForm","messageData","room","emit","placeholder","Chat","useEffect","io","on","appBar","flexShrink","drawerPaper","drawerContainer","overflow","content","link","textDecoration","profileLogo","alignContent","cursor","profileName","nested","paddingLeft","DashboardSidebar","icons","CssBaseline","Drawer","Toolbar","Divider","fieldName","index","pathname","split","toLowerCase","List","ListItem","selected","ListItemIcon","ListItemText","primary","createStyles","menuButton","DashboardNavbar","setUser","useLocation","decode","exp","Date","getTime","AppBar","IconButton","edge","join","Dashboard","App","exact","initialState","authReducer","action","setItem","stringify","taskReducer","elem","indexOf","newArray","splice","usersReducer","updateTaskReducer","chatReducer","rootReducer","combineReducers","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ad65b3c5.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'https://hv-crm.herokuapp.com'\n})\n\ninstance.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n  return req;\n});\n\nexport const authApi = ({\n  signUp(newCompanyInfo) { return instance.post('auth/signup', newCompanyInfo) },\n  signupEmployee(newEmployeeInfo) { return instance.post('auth/signupEmployee', newEmployeeInfo) },\n  signIn(formData) { return instance.post('auth/signin', formData) }\n})\n\nexport const userApi = ({\n  getUsers(company) { return instance.get(`users/getusers?company=${company}`) },\n  createUser(formData) { return instance.post('users/createuser', formData) },\n  updateUser(id, formData) { return instance.post(`users/updateuser/${id}`, formData) },\n})\n\nexport const taskApi = ({\n  createTask(formData) { return instance.post('task/createtask', formData) },\n  updateTask(formData, id) { return instance.patch(`task/updatetask/${id}`, formData) },\n  getTask(company) { return instance.get(`task/gettasks?company=${company}`) }\n})\n\nexport const chatApi = ({\n  createChat(chatDate) { return instance.post('/chat/createmessage', chatDate) },\n  getChat(company) { return instance.get(`/chat/getchat?company=${company}`) }\n})\n","import React, { useEffect } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport io from 'socket.io-client'\n\nimport { chatActions, getChatAction } from \"./../../../redux/actions/chatActions\"\nimport ChatContainer from './ChatContainer/ChatContainer'\nimport InputForm from './InputForm/InputForm'\nimport './Style.css'\n\nconst CONNECTION_PORT = 'localhost:5000'\nexport let socket;\n\nconst Chat = () => {\n\n  const dispatch = useDispatch()\n  const user = JSON.parse(localStorage.getItem('profile'))\n\n  useEffect(() => {\n    socket = io(CONNECTION_PORT)\n    socket.emit('join_room', user.result.company)\n  }, [user.result.company])\n\n  useEffect(() => {\n    socket.on('receive_message', (data) => {\n      dispatch(chatActions.createChat(data))\n    })\n  })\n\n  useEffect(() => {\n    dispatch(getChatAction(user.result.company))\n  }, [user.result.company, dispatch])\n\n  return (\n    <div className='outerContainer'>\n      <div className='container'><ChatContainer /></div>\n      <div><InputForm /></div>\n    </div>\n  )\n}\n\nexport default Chat","import { authApi } from '../../api/API'\n\nexport const authActions = {\n  signUp: (formData) => ({ type: 'SIGN_UP', formData }),\n  signIn: (formData) => ({ type: 'SIGN_IN', formData }),\n  logout: () => ({ type: \"LOGOUT\" }),\n}\n\nexport const signUpAction = (formData, history) => async (dispatch) => {\n  try {\n    const { data } = await authApi.signUp(formData)\n    dispatch(authActions.signUp(data))\n    // history.push(`/main?company=${data.result.company.split(' ').join('').toLowerCase()}`)\n    history.push(`/main/task`)\n  } catch (error) {\n    console.log('signUpAction', error)\n  }\n};\n\nexport const signupEmployeeAction = (newEmployeeInfo, history) => async (dispatch) => {\n  try {\n    await authApi.signupEmployee(newEmployeeInfo)\n    history.push('/main/RegistrationSuccess')\n  } catch (error) {\n    console.log('signupEmployeeAction', error)\n  }\n};\n\nexport const signinAction = (formData, history) => async (dispatch) => {\n  try {\n    const { data } = await authApi.signIn(formData)\n    dispatch(authActions.signIn(data))\n    history.push(`/main/task`)\n  } catch (error) {\n    console.log('signInAction', error);\n  }\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Helmet } from 'react-helmet'\nimport { Link as RouterLink, Link } from 'react-router-dom';\nimport { Formik } from \"formik\";\nimport { useHistory } from \"react-router-dom\"\nimport * as Yup from \"yup\";\nimport {\n  Checkbox,\n  Button,\n  Container,\n  TextField,\n  Typography,\n  Box,\n  FormHelperText\n} from '@material-ui/core'\n\nimport { signUpAction } from \"../../../redux/actions/authActions\"\n\nconst SignUp = () => {\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Helmet> <title>Create new Company</title> </Helmet>\n\n      <Formik\n        enableReinitialize\n        initialValues={{\n          email: '',\n          firstName: '',\n          lastName: '',\n          password: '',\n          policy: false,\n        }}\n        validationSchema={\n          Yup.object().shape({\n            email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            firstName: Yup.string().max(255).required('First name is required'),\n            lastName: Yup.string().max(255).required('Last name is required'),\n            password: Yup.string().max(255).required('Password is required'),\n            confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match'),\n            company: Yup.string().max(255).required('Company is required'),\n            policy: Yup.boolean().oneOf([true], 'This field must be checked')\n          })\n        }\n        onSubmit={(values) => {\n          dispatch(signUpAction(values, history))\n        }}\n      >\n        {\n          ({ errors, handleBlur, handleChange, isSubmitting, touched, values, handleSubmit }) => (\n\n            <form onSubmit={handleSubmit}>\n              <Box sx={{ mb: 3 }}>\n                <Typography color=\"textPrimary\" variant=\"h2\" align='center'> Create new company </Typography>\n                <Typography color=\"textSecondary\" gutterBottom variant=\"body2\" align='center'> Use your email to create new account</Typography>\n              </Box>\n              <TextField\n                error={Boolean(touched.firstName && errors.firstName)}\n                fullWidth\n                helperText={touched.firstName && errors.firstName}\n                label=\"First name\"\n                margin=\"normal\"\n                name=\"firstName\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n              <TextField\n                error={Boolean(touched.lastName && errors.lastName)}\n                fullWidth\n                helperText={touched.lastName && errors.lastName}\n                label=\"Last name\"\n                margin=\"normal\"\n                name=\"lastName\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n              <TextField\n                error={Boolean(touched.email && errors.email)}\n                fullWidth\n                helperText={touched.email && errors.email}\n                label=\"Email Address\"\n                margin=\"normal\"\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"email\"\n                value={values.email}\n                variant=\"outlined\"\n              />\n              <TextField\n                error={Boolean(touched.company && errors.company)}\n                fullWidth\n                helperText={touched.company && errors.company}\n                label=\"Company\"\n                margin=\"normal\"\n                name=\"company\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"company\"\n                value={values.company}\n                variant=\"outlined\"\n              />\n              <TextField\n                error={Boolean(touched.password && errors.password)}\n                fullWidth\n                helperText={touched.password && errors.password}\n                label=\"Password\"\n                margin=\"normal\"\n                name=\"password\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n              <TextField\n                error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                fullWidth\n                helperText={touched.confirmPassword && errors.confirmPassword}\n                label=\"Confirm Password\"\n                margin=\"normal\"\n                name=\"confirmPassword\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"password\"\n                value={values.confirmPassword}\n                variant=\"outlined\"\n              />\n              <Box sx={{ alignItems: 'center', display: 'flex', ml: -1 }} >\n                <Checkbox checked={values.policy} name=\"policy\" onChange={handleChange} />\n                <Typography color=\"textSecondary\" variant=\"body1\" >\n                  I have read the\n                    {' '}\n                  <Link color=\"primary\" component={RouterLink} to=\"#\" underline=\"always\" variant=\"body1\" >\n                    Terms and Conditions\n                    </Link>\n                </Typography>\n              </Box>\n              {Boolean(touched.policy && errors.policy) && (\n                <FormHelperText error>\n                  {errors.policy}\n                </FormHelperText>\n              )}\n              <Box sx={{ py: 2 }}>\n                <Button color=\"primary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\n                  Sign up now\n                </Button>\n              </Box>\n            </form>\n          )}\n      </Formik>\n    </Container>\n  )\n}\n\nexport default SignUp","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Helmet } from 'react-helmet'\nimport * as Yup from 'yup';\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Container,\n  FormHelperText,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\n\nimport { signinAction } from \"../../../redux/actions/authActions\";\n\nconst SignIn = () => {\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  return (\n    <Container maxWidth=\"xs\" component='main' >\n\n      <Helmet> <title>Log in</title> </Helmet>\n\n      <Formik\n        enableReinitialize\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={\n          Yup.object().shape({\n            email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            password: Yup.string().max(255).required('password is required'),\n          })\n        }\n        onSubmit={(values, { resetForm }) => {\n          dispatch(signinAction(values, history))\n          resetForm({ values: '' })\n        }}\n      >\n        {\n          ({ errors, handleBlur, handleChange, isSubmitting, touched, values, handleSubmit }) => (\n\n            <form onSubmit={handleSubmit}>\n              <Box sx={{ mb: 3 }}>\n                <Typography color=\"textPrimary\" variant=\"h2\" align='center' > Log In </Typography>\n              </Box>\n              <TextField\n                error={Boolean(touched.email && errors.email)}\n                fullWidth\n                helperText={touched.email && errors.email}\n                label=\"Email Address\"\n                margin=\"normal\"\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"email\"\n                value={values.email}\n                variant=\"outlined\"\n              />\n              <TextField\n                error={Boolean(touched.password && errors.password)}\n                fullWidth\n                helperText={touched.password && errors.password}\n                label=\"Password\"\n                margin=\"normal\"\n                name=\"password\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n              {\n                Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error> {errors.policy} </FormHelperText>\n                )\n              }\n              <Box sx={{ py: 2 }}>\n                <Button color=\"primary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\n                  Sign up now\n                </Button>\n              </Box>\n            </form>\n          )}\n      </Formik>\n    </Container >\n  )\n}\n\nexport default SignIn","import React from 'react'\n\nimport './Style.scss'\n\nconst InfoList = () => {\n\n  return (\n    <div className='description'>\n      <h3 className='mainTitle' > What you will have with us </h3 >\n      <h5 className='title'> Tasks </h5>\n      <div className='text'> Create tasks and take control of your entire business </div>\n      <h5 className='title'> Chat </h5>\n      <div className='text'> Create chat and communicate with colleagues </div>\n    </div>\n  )\n}\n\nexport default InfoList\n","export default __webpack_public_path__ + \"static/media/logo.7da89f0e.png\";","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport logo from '../../images/logo.png'\nimport './Header.scss'\n\nconst Header = () => {\n\n  const history = useHistory()\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n\n  const handlerClickSignIn = () => {\n    history.push('/home/signin')\n  }\n\n  const handlerClickLogOut = () => {\n    localStorage.removeItem('profile')\n    history.push('/home')\n  }\n\n  return (\n    <div className='navBar'>\n      <div className='logo'>\n        <Link to='/home'>\n          <img src={logo} alt=\"logo\" />\n        </Link>\n      </div>\n      <div className='loginLogout'>\n        {\n          !user?.token\n            ? <button className='btn' onClick={handlerClickSignIn}> Sign in </button>\n            : <button className='btn' onClick={handlerClickLogOut}> Log Out </button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import { Switch, Route } from 'react-router-dom'\n\nimport './Home.scss'\nimport SignUp from '../SignUp/SignUp'\nimport SignIn from \"../SignIn/SignIn\";\nimport InfoList from \"../InfoList/InfoList\";\nimport Header from \"../Header/Header\";\n\n\nconst Home = () => {\n\n  return (\n    <div className='mainInfoBar'>\n      <div>\n        <Header />\n      </div>\n      <div className='infoBar'>\n        <InfoList />\n        <div>\n          <Switch>\n            <Route path='/home/signin' render={() => <SignIn />} />\n            <Route path='/home' render={() => <SignUp />} />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttons: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(2)\n  },\n  rootGrid: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n}\n));\n\nexport default useStyles","import React from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport MuiAlert from '@material-ui/lab/Alert'\nimport {\n  Button,\n  Grid\n} from '@material-ui/core'\n\nimport useStyles from './Style'\n\nconst RegistrationSuccess = () => {\n\n  const classes = useStyles()\n  const history = useHistory()\n\n  const handelRegistration = () => {\n    history.push('/main/register')\n  }\n\n  const handelTask = () => {\n    history.push('/main/task')\n  }\n\n  return (\n    <Grid container className={classes.rootGrid}>\n      <Grid className={classes.root} item>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">Registration completed successfully!</MuiAlert>\n      </Grid>\n      <Grid item className={classes.buttons}>\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handelRegistration}>\n          Continue registration\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={handelTask}>\n          Go to task\n      </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default RegistrationSuccess\n","export const EmployeesIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-users\"><path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"9\" cy=\"7\" r=\"4\"></circle><path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path><path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path></svg>","export const RegisterIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-user-plus\"><path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"></line><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line></svg>","export const SettingsIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-settings\"><circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path></svg>","export const AccountIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-user\"><path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg>","export const ChatIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-message-circle\"><path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path></svg>","export const TaskIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-clipboard\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default useStyles","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport AddIcon from '@material-ui/icons/Add'\nimport {\n  Tooltip,\n  Fab\n} from '@material-ui/core'\n\nimport useStyles from './Style'\n\nconst AddEmployeeButton = () => {\n\n  const classes = useStyles()\n  const history = useHistory()\n\n  const handelAddEmployee = () => {\n    history.push('/main/register')\n  }\n\n  return (\n    <Tooltip title=\"Add\" aria-label=\"add\" onClick={handelAddEmployee} >\n      <Fab color=\"primary\" className={classes.fab}>\n        <AddIcon />\n      </Fab>\n    </Tooltip>\n  )\n}\n\nexport default AddEmployeeButton\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    marginRight: theme.spacing(2)\n  },\n}));\n\nexport default useStyles","import React from 'react'\nimport {\n  TableCell,\n  TableBody,\n  Typography,\n  TableRow,\n  Avatar\n} from '@material-ui/core'\n\nimport logo from '../../../images/logo.png'\nimport makeStyles from './Style'\n\nconst Employee = ({ photo, fullName, email, location, phone, store }) => {\n\n  const classes = makeStyles()\n\n  return (\n    <TableBody className={classes.tableContainer}>\n      <TableRow hover>\n        <TableCell>\n          <Avatar alt=\"Remy Sharp\" src={logo} className={classes.large} />\n        </TableCell>\n        <TableCell>\n          <Typography>{fullName}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography>{email}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography>{location}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography>{phone}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography>{store}</Typography>\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  )\n}\n\nexport default Employee\n","import React from 'react'\nimport AddEmployeeButton from \"./AddEmployeButton/AddEmployeButton\"\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport Employee from \"./Employee/Employee\"\nimport { useSelector } from \"react-redux\";\nimport {\n  Grid,\n  Box,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  Card,\n  TableContainer\n} from \"@material-ui/core\"\n\nconst Employees = () => {\n\n  const users = useSelector(store => store.users)\n\n  return (\n    <Box container>\n      <Grid element align='center'>\n        <AddEmployeeButton />\n      </Grid>\n      <Grid>\n        <Card>\n          <PerfectScrollbar>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Photo</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Phone</TableCell>\n                    <TableCell>Store</TableCell>\n                  </TableRow>\n                </TableHead>\n                {\n                  users.map(user => {\n                    return <Employee\n                      photo={user.photo}\n                      fullName={user.fullName}\n                      email={user.email}\n                      location={user.location}\n                      phone={user.phone}\n                      store={user.store}\n                    />\n                  })\n                }\n              </Table>\n            </TableContainer>\n          </PerfectScrollbar>\n        </Card>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Employees\n","import React from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch } from \"react-redux\"\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport * as Yup from 'yup'\nimport { Formik } from 'formik'\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core'\n\nimport { signupEmployeeAction } from \"./../../../redux/actions/authActions\";\n\nconst Register = () => {\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const userCompany = JSON.parse(localStorage.getItem('profile')).result.company\n\n  return (\n    <>\n      <Helmet> <title>Register | Material Kit</title> </Helmet>\n\n      <Box sx={{ backgroundColor: 'background.default', display: 'flex', flexDirection: 'column', height: '100%', justifyContent: 'center' }} >\n        <Container maxWidth=\"sm\">\n          <Formik\n            enableReinitialize\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              confirmPassword: '',\n              policy: false,\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={(values, isSubmitting) => {\n              dispatch(signupEmployeeAction({ ...values, company: userCompany }, history))\n            }}\n          >\n            {\n              ({ errors, handleBlur, handleChange, isSubmitting, touched, values, handleSubmit }) => (\n\n                <form onSubmit={handleSubmit}>\n                  <Box sx={{ mb: 3 }}>\n                    <Typography color=\"textPrimary\" variant=\"h2\" > Create new account </Typography>\n                    <Typography color=\"textSecondary\" gutterBottom variant=\"body2\" >\n                      Use your email to create new account\n                  </Typography>\n                  </Box>\n                  <TextField\n                    error={Boolean(touched.firstName && errors.firstName)}\n                    fullWidth\n                    helperText={touched.firstName && errors.firstName}\n                    label=\"First name\"\n                    margin=\"normal\"\n                    name=\"firstName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.firstName}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.lastName && errors.lastName)}\n                    fullWidth\n                    helperText={touched.lastName && errors.lastName}\n                    label=\"Last name\"\n                    margin=\"normal\"\n                    name=\"lastName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.lastName}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                    fullWidth\n                    helperText={touched.confirmPassword && errors.confirmPassword}\n                    label=\"Confirm Password\"\n                    margin=\"normal\"\n                    name=\"confirmPassword\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.confirmPassword}\n                    variant=\"outlined\"\n                  />\n                  <Box sx={{ alignItems: 'center', display: 'flex', ml: -1 }} >\n                    <Checkbox checked={values.policy} name=\"policy\" onChange={handleChange} />\n                    <Typography color=\"textSecondary\" variant=\"body1\" >\n                      I have read the\n                    {' '}\n                      <Link color=\"primary\" component={RouterLink} to=\"#\" underline=\"always\" variant=\"body1\" >\n                        Terms and Conditions\n                    </Link>\n                    </Typography>\n                  </Box>\n                  {Boolean(touched.policy && errors.policy) && (\n                    <FormHelperText error> {errors.policy} </FormHelperText>\n                  )}\n                  <Box sx={{ py: 2 }}>\n                    <Button color=\"primary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\n                      Sign up now\n                  </Button>\n                  </Box>\n                </form>\n              )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Register\n","import React from 'react'\n\nconst Settings = () => {\n  return (\n    <div>\n      Settings\n    </div>\n  )\n}\n\nexport default Settings","import { userApi } from '../../api/API'\n\nexport const usersAction = {\n  getUsers: (users) => ({ type: \"GET_USERS\", users }),\n  updateUser: (updatedInfo) => ({ type: 'UPDATE_USER', updatedInfo })\n}\n\nexport const getUsersAction = (company) => async (dispatch) => {\n  try {\n    const { data } = await userApi.getUsers(company)\n    dispatch(usersAction.getUsers(data))\n  } catch (error) {\n    console.log(\"getUsersAction\", error)\n  }\n}\n\nexport const updateUserAction = (userId, formData) => async (dispatch) => {\n  try {\n    const { data } = await userApi.updateUser(userId, formData)\n    //console.log('DDDDDDDDDDDD------', data);\n    dispatch(usersAction.updateUser(data.result))\n  } catch (error) {\n    console.log('updateUserAction', error)\n  }\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport { lime } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n    backgroundColor: lime[500],\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n}));\n\nexport default useStyles","import React from 'react'\nimport * as Yup from 'yup';\nimport { Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { Helmet } from 'react-helmet'\nimport {\n  Grid,\n  Box,\n  TextField,\n  Button,\n  FormHelperText,\n  Avatar,\n  ButtonBase,\n  Paper\n} from '@material-ui/core';\n\nimport { updateUserAction } from '../../../redux/actions/userActions';\nimport useStyles from './Style'\n\n\nconst Account = () => {\n\n  const user = JSON.parse(localStorage.getItem('profile'))\n  const classes = useStyles();\n  const dispatch = useDispatch()\n\n\n  return (\n    <div className={classes.root}>\n\n      <Helmet> <title>Account</title> </Helmet>\n\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              <Avatar className={classes.avatar} alt={user?.result?.name} src={user?.result?.photo} >{user?.result?.fullName.charAt(0).toUpperCase()}</Avatar>\n            </ButtonBase>\n          </Grid>\n          <Formik\n            enableReinitialize\n            initialValues={{\n              email: String(user?.result?.email),\n              firstName: String(user?.result?.firstName),\n              lastName: String(user?.result?.lastName),\n              company: String(user?.result?.company),\n\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                company: Yup.string().max(255).required('Company is required'),\n              })\n            }\n            onSubmit={(values, { resetForm }) => {\n              dispatch(updateUserAction(user.result._id, values))\n            }}\n          >\n            {\n              ({ errors, handleBlur, handleChange, isSubmitting, touched, values, handleSubmit }) => (\n\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                    disabled\n                    error={Boolean(touched.company && errors.company)}\n                    fullWidth\n                    helperText={touched.company && errors.company}\n                    label=\"company\"\n                    margin=\"normal\"\n                    name=\"company\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"company\"\n                    value={values.company}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    disabled\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.firstName && errors.firstName)}\n                    fullWidth\n                    helperText={touched.firstName && errors.firstName}\n                    label=\"First Name\"\n                    margin=\"normal\"\n                    name=\"firstName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"firstName\"\n                    value={values.firstName}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.lastName && errors.lastName)}\n                    fullWidth\n                    helperText={touched.lastName && errors.lastName}\n                    label=\"Last name\"\n                    margin=\"normal\"\n                    name=\"lastName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"lastName\"\n                    value={values.lastName}\n                    variant=\"outlined\"\n                  />\n                  {Boolean(touched.policy && errors.policy) && (\n                    <FormHelperText error> {errors.policy} </FormHelperText>\n                  )}\n                  <Box sx={{ py: 2 }}>\n                    <Button color=\"primary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\n                      Update\n                    </Button>\n                  </Box>\n                </form>\n              )}\n          </Formik>\n        </Grid>\n      </Paper>\n    </div >\n  );\n}\n\nexport default Account","import { taskApi } from '../../api/API'\n\nconst taskActions = {\n  createTask(formData) { return { type: 'CREATE_TASK', formData } },\n  updateTask(formData) { return { type: 'UPDATE_TASK', formData } },\n  getTasks(tasks) { return { type: 'GET_TASKS', tasks } },\n}\n\nexport const createTaskAction = (formData) => async (dispatch) => {\n  try {\n    const { data } = await taskApi.createTask(formData)\n    dispatch(taskActions.createTask(data))\n  } catch (error) {\n    console.log('createTaskAction', error)\n  }\n}\n\nexport const updateTaskAction = (formData, id) => async (dispatch) => {\n  try {\n    const { data } = await taskApi.updateTask(formData, id)\n    dispatch(taskActions.updateTask(data))\n  } catch (error) {\n    console.log('updateTaskAction', error)\n  }\n}\n\nexport const getTasksAction = (company) => async (dispatch) => {\n  try {\n    const { data } = await taskApi.getTask(company)\n    dispatch(taskActions.getTasks(data))\n  } catch (error) {\n    console.log('getTasksAction', error)\n  }\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(1)\n  },\n  closeButton: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nexport default useStyles","import { useSelector } from \"react-redux\"\nimport React, { useState } from 'react'\nimport { Helmet } from \"react-helmet\"\nimport { Formik } from \"formik\"\nimport * as Yup from 'yup'\nimport { Close } from '@material-ui/icons'\nimport { useDispatch } from 'react-redux'\nimport {\n  Box,\n  Container,\n  TextField,\n  FormHelperText,\n  Button,\n  Paper,\n  Tooltip,\n  Fab,\n  MenuItem\n} from \"@material-ui/core\"\n\nimport { createTaskAction } from '../../../../redux/actions/tasksActions'\nimport useStyles from './Style'\n\nconst TaskCreateForm = ({ handleClose }) => {\n\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n  const users = useSelector((state) => state.users)\n\n  const closeTaskBare = () => {\n    handleClose()\n  }\n\n  return (\n    <>\n      <Helmet> <title>Create a new task</title> </Helmet>\n\n      <Paper elevation={3}>\n        <Tooltip title=\"Close\" aria-label=\"add\" onClick={closeTaskBare} className={classes.closeButton}>\n          <Fab color=\"secondary\" className={classes.fab}>\n            <Close />\n          </Fab>\n        </Tooltip>\n        <Box sx={{ backgroundColor: 'background.default', display: 'flex', flexDirection: 'column', height: '100%', justifyContent: 'center' }} >\n          <Container maxWidth=\"sm\">\n            <Formik\n              enableReinitialize\n              initialValues={{\n                taskTitle: '',\n                taskDescription: '',\n                urgency: '',\n                creatorId: user?.result?._id,\n                creatorName: user?.result?.fullName,\n                company: user?.result?.company,\n                createdFor: '',\n                email: '',\n              }}\n              validationSchema={\n                Yup.object().shape({\n                  taskTitle: Yup.string().max(255).required('Task title is required'),\n                  taskDescription: Yup.string().max(255).required('Task description is required'),\n                  urgency: Yup.string().max(255).required('Urgency is required'),\n                  createdFor: Yup.string().max(255).required('Created For is required'),\n                  email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                })\n              }\n              onSubmit={(values, { resetForm }) => {\n                dispatch(createTaskAction(values))\n                closeTaskBare()\n                resetForm({ values: '' })\n              }}\n            >\n              {\n                ({ errors, handleBlur, handleChange, isSubmitting, touched, values, handleSubmit }) => (\n\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      error={Boolean(touched.taskTitle && errors.taskTitle)}\n                      fullWidth\n                      helperText={touched.taskTitle && errors.taskTitle}\n                      label=\"Task Title\"\n                      margin=\"normal\"\n                      name=\"taskTitle\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.taskTitle}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      error={Boolean(touched.taskDescription && errors.taskDescription)}\n                      fullWidth\n                      helperText={touched.taskDescription && errors.taskDescription}\n                      label=\"Task Description\"\n                      margin=\"normal\"\n                      name=\"taskDescription\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      multiline\n                      rows={4}\n                      value={values.taskDescription}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      error={Boolean(touched.urgency && errors.urgency)}\n                      fullWidth\n                      helperText={touched.urgency && errors.urgency}\n                      label=\"Urgency\"\n                      margin=\"normal\"\n                      name=\"urgency\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      select\n                      value={values.urgency}\n                      variant=\"outlined\"\n                    >\n                      <MenuItem key='Not urgent' value='Not urgent'> Not urgent </MenuItem>\n                      <MenuItem key='Urgent' value='Urgent'> Urgent </MenuItem>\n                      <MenuItem key='Immediately' value='Immediately'> Immediately </MenuItem>\n                      ))\n                    </TextField>\n                    <TextField\n                      error={Boolean(touched.createdFor && errors.createdFor)}\n                      fullWidth\n                      helperText={touched.createdFor && errors.createdFor}\n                      label=\"Created For\"\n                      margin=\"normal\"\n                      name=\"createdFor\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      select\n                      value={values.createdFor}\n                      variant=\"outlined\"\n                    >\n                      {\n                        users.map(user => {\n                          values.email = user.email\n                          return <MenuItem key={user.fullName} value={user.fullName}> {user.fullName} </MenuItem>\n                        })\n                      }\n                    </TextField>\n                    {Boolean(touched.policy && errors.policy) && (\n                      <FormHelperText error> {errors.policy} </FormHelperText>\n                    )}\n                    <Box sx={{ py: 2 }}>\n                      <Button color=\"primary\" fullWidth size=\"large\" type=\"submit\" variant=\"contained\" className={classes.button}>\n                        Create Task\n                      </Button>\n                    </Box>\n                  </form>\n                )}\n            </Formik>\n          </Container>\n        </Box>\n      </Paper>\n    </>\n  )\n}\n\nexport default TaskCreateForm\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    margin: theme.spacing(2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n\n  },\n}));\n\nexport default useStyles","import React, { useState } from 'react'\nimport AddIcon from '@material-ui/icons/Add'\nimport {\n  Tooltip,\n  Backdrop,\n  Fab\n} from '@material-ui/core'\n\nimport TaskCreateForm from \"../TaskCreateForm/TaskCreateForm\"\nimport useStyles from './Style'\n\nconst AddTaskButton = () => {\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handelAddTask = () => {\n    setOpen(!open);\n    //console.log(\"Add new Task\");\n  }\n\n  return (\n    <div>\n      <Tooltip title=\"Add\" aria-label=\"add\" onClick={handelAddTask}>\n        <Fab color=\"primary\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Backdrop className={classes.backdrop} open={open} >\n        <TaskCreateForm handleClose={handleClose} />\n      </Backdrop>\n    </div>\n  )\n}\n\nexport default AddTaskButton\n","export const updateTaskAction = {\n  updateTaskId(id) { return { type: 'UPDATE_TASK_ID', id } }\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  root: {\n    height: 180,\n  },\n  wrapper: {\n    width: 100 + theme.spacing(2),\n  },\n  paper: {\n    zIndex: 1,\n    position: 'relative',\n    margin: theme.spacing(1),\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n\n}));\n\nexport default useStyles","import React from 'react'\nimport { useDispatch } from \"react-redux\"\nimport {\n  TableCell,\n  TableBody,\n  Typography,\n  TableRow,\n  Avatar\n} from '@material-ui/core'\n\nimport { updateTaskAction } from '../../../../redux/actions/updateTask'\nimport logo from '../../../images/logo.png'\nimport makeStyles from './Style'\n\nconst TaskElement = ({ creator, title, description, urgency, status, createdFor, id, handleToggle }) => {\n\n  const classes = makeStyles()\n  const dispatch = useDispatch()\n\n  const onHandelClick = () => {\n    dispatch(updateTaskAction.updateTaskId(id))\n  }\n\n  return (\n    <TableBody className={classes.tableContainer} onClick={onHandelClick}>\n      <TableRow hover onClick={handleToggle}>\n        <TableCell>\n          <Avatar alt={creator} src={logo} className={classes.large} />\n        </TableCell>\n        <TableCell>\n          <Typography>{creator}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography>{title}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography>{description}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography>{urgency}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography>{status}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography>{createdFor}</Typography>\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  )\n}\n\nexport default TaskElement\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  closeButton: {\n    marginTop: theme.spacing(1)\n  },\n  updateButton: {\n    marginBottom: theme.spacing(1)\n  },\n  container: {\n    marginRight: theme.spacing(1)\n  },\n  gridContainer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\n\nexport default useStyles","import React from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport * as Yup from 'yup'\nimport { Formik } from \"formik\"\nimport moment from 'moment'\nimport { Close } from '@material-ui/icons'\nimport {\n  Grid,\n  Box,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Card,\n  Table,\n  Paper,\n  Backdrop,\n  Tooltip,\n  Fab,\n  TextField,\n  Container,\n  Button,\n  FormHelperText,\n  MenuItem\n} from \"@material-ui/core\"\n\nimport { updateTaskAction } from \"./../../../redux/actions/tasksActions\"\nimport AddTaskButton from \"./AddTaskButton/AddTaskButton\"\nimport TaskElement from './TaskElement/TaskElement'\nimport useStyles from './Style'\n\nconst Tasks = () => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const tasks = useSelector(state => state.tasks)\n  const task = useSelector(state => state.tasks.filter(task => task._id === state.updateTaskId.updateTaskId)[0])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n  const closeTaskBare = () => {\n    handleClose()\n  }\n\n  return (\n    <Box container>\n      <Grid element align='center'>\n        <AddTaskButton />\n      </Grid>\n      <Grid>\n        <Card>\n          <PerfectScrollbar>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Photo</TableCell>\n                    <TableCell>Creator</TableCell>\n                    <TableCell>Title</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Urgency</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Created For</TableCell>\n                  </TableRow>\n                </TableHead>\n                {\n                  tasks ? tasks?.map(task => {\n                    return <TaskElement\n                      handleToggle={handleToggle}\n                      id={task._id}\n                      key={task._id}\n                      photo={task?.creatorPhoto}\n                      creator={task?.creatorName}\n                      title={task?.title}\n                      description={task?.description}\n                      urgency={task?.urgency}\n                      status={task?.status}\n                      createdFor={task?.createdFor}\n                    />\n                  }) : null\n                }\n              </Table>\n            </TableContainer>\n          </PerfectScrollbar>\n        </Card>\n      </Grid>\n      <Grid>\n        <div>\n          <Backdrop className={classes.backdrop} open={open} >\n            <Paper elevation={3} align='center'>\n              <Tooltip title=\"Close\" aria-label=\"add\" onClick={closeTaskBare} className={classes.closeButton}>\n                <Fab color=\"secondary\" >\n                  <Close onClick={handleClose} />\n                </Fab>\n              </Tooltip>\n              <Box sx={{ backgroundColor: 'background.default', display: 'flex', flexDirection: 'column', height: '100%', justifyContent: 'center' }} >\n                <Container maxWidth=\"sm\">\n                  <Formik\n                    enableReinitialize\n                    initialValues={{\n                      creatorName: String(task?.creatorName),\n                      company: String(task?.company),\n                      taskDescription: String(task?.description),\n                      createdAt: moment(task?.createdAt).format('lll'),\n                      createdAtFromNow: moment(task?.createdAt).fromNow(),\n                      title: String(task?.title),\n                      urgency: String(task?.urgency),\n                      status: String(task?.status),\n                      comment: String(task?.comment),\n                    }}\n                    validationSchema={\n                      Yup.object().shape({\n                        creatorName: Yup.string().max(255).required('Creator Name is required'),\n                        company: Yup.string().max(255).required('Company is required'),\n                        taskDescription: Yup.string().max(255).required('Task Description is required'),\n                        createdAt: Yup.string().max(255).required('Created at is required'),\n                        createdAtFromNow: Yup.string().max(255).required('Created at is required'),\n                        title: Yup.string().max(255).required('Title is required'),\n                        urgency: Yup.string().max(255).required('Urgency is required'),\n                        status: Yup.string().max(255).required('Status is required'),\n                        comment: Yup.string().max(255).required('comment is required'),\n                      })\n                    }\n                    onSubmit={(values, { resetForm }) => {\n                      dispatch(updateTaskAction(values, task._id))\n                      closeTaskBare()\n                      resetForm({ values: '' })\n                    }}\n                  >\n                    {\n                      ({ errors, handleBlur, handleChange, isSubmitting, touched, values, handleSubmit }) => (\n                        <form onSubmit={handleSubmit} >\n                          <Grid container className={classes.gridContainer}>\n                            <Grid item >\n                              <TextField\n                                disabled\n                                error={Boolean(touched.creatorName && errors.creatorName)}\n                                fullWidth\n                                helperText={touched.creatorName && errors.creatorName}\n                                label=\"Creator Name\"\n                                margin=\"normal\"\n                                name=\"creatorName\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                value={values.creatorName}\n                                variant=\"outlined\"\n                              />\n                            </Grid>\n                            <Grid item >\n                              <TextField\n                                disabled\n                                error={Boolean(touched.company && errors.company)}\n                                fullWidth\n                                helperText={touched.company && errors.company}\n                                label=\"Company\"\n                                margin=\"normal\"\n                                name=\"company\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                value={values.company}\n                                variant=\"outlined\"\n                              />\n                            </Grid>\n                            <Grid item >\n                              <TextField\n                                disabled\n                                error={Boolean(touched.createdAt && errors.createdAt)}\n                                fullWidth\n                                helperText={touched.createdAt && errors.createdAt}\n                                label=\"Created At\"\n                                margin=\"normal\"\n                                name=\"createdAt\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                value={values.createdAt}\n                                variant=\"outlined\"\n                              />\n                            </Grid>\n                            <Grid item>\n                              <TextField\n                                disabled\n                                error={Boolean(touched.createdAtFromNow && errors.createdAtFromNow)}\n                                fullWidth\n                                helperText={touched.createdAtFromNow && errors.createdAtFromNow}\n                                label=\"Created At\"\n                                margin=\"normal\"\n                                name=\"createdAtFromNow\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                value={values.createdAtFromNow}\n                                variant=\"outlined\"\n                              />\n                            </Grid>\n                          </Grid>\n                          <TextField\n                            error={Boolean(touched.title && errors.title)}\n                            disabled\n                            fullWidth\n                            helperText={touched.title && errors.title}\n                            label=\"Title\"\n                            margin=\"normal\"\n                            name=\"title\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            multiline\n                            value={values.title}\n                            variant=\"outlined\"\n                          />\n                          <TextField\n                            error={Boolean(touched.taskDescription && errors.taskDescription)}\n                            disabled\n                            fullWidth\n                            helperText={touched.taskDescription && errors.taskDescription}\n                            label=\"Task Description\"\n                            margin=\"normal\"\n                            name=\"taskDescription\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            multiline\n                            rows={4}\n                            value={values.taskDescription}\n                            variant=\"outlined\"\n                          />\n                          <TextField\n                            error={Boolean(touched.comment && errors.comment)}\n                            fullWidth\n                            helperText={touched.comment && errors.comment}\n                            label=\"Comment\"\n                            margin=\"normal\"\n                            name=\"comment\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            multiline\n                            rows={4}\n                            value={values.comment !== \"undefined\" ? values.comment : \"\"}\n                            variant=\"outlined\"\n                          />\n                          <TextField\n                            error={Boolean(touched.urgency && errors.urgency)}\n                            disabled\n                            fullWidth\n                            helperText={touched.urgency && errors.urgency}\n                            label=\"Urgency\"\n                            margin=\"normal\"\n                            name=\"urgency\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            multiline\n                            value={values.urgency}\n                            variant=\"outlined\"\n                          />\n                          <TextField\n                            error={Boolean(touched.status && errors.status)}\n                            fullWidth\n                            helperText={touched.status && errors.status}\n                            label=\"Status\"\n                            margin=\"normal\"\n                            name=\"status\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            select\n                            value={values.status !== \"undefined\" ? values.comment : \"\"}\n                            variant=\"outlined\"\n                          >\n                            <MenuItem key='Not in progress' value='Not in progress'> Not in progress </MenuItem>\n                            <MenuItem key='In progress' value='In progress'> In progress </MenuItem>\n                            <MenuItem key='Done' value='Done'> Done </MenuItem>\n                          </TextField>\n                          {Boolean(touched.policy && errors.policy) && (\n                            <FormHelperText error> {errors.policy} </FormHelperText>\n                          )}\n                          <Box sx={{ py: 2 }}>\n                            <Button color=\"primary\" fullWidth size=\"large\" type=\"submit\" variant=\"contained\" className={classes.updateButton}>\n                              Update task\n                            </Button>\n                          </Box>\n                        </form>\n                      )}\n                  </Formik>\n                </Container>\n              </Box>\n            </Paper>\n          </Backdrop>\n        </div>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default Tasks\n","import { chatApi } from '../../api/API'\n\nexport const chatActions = {\n  createChat(chatData) { return { type: 'CREATE_CHAT', chatData } },\n  getChat(chat) { return { type: 'GET_CHAT', chat } }\n}\n\nexport const createChatAction = (chatData) => async (dispatch) => {\n  try {\n    const { data } = await chatApi.createChat(chatData)\n    dispatch(chatActions.createChat(data))\n  } catch (error) {\n    console.log('createChatAction', error)\n  }\n}\n\nexport const getChatAction = (company) => async (dispatch) => {\n  try {\n    const { data } = await chatApi.getChat(company)\n    dispatch(chatActions.getChat(data))\n  } catch (error) {\n    console.log('getChatAction', error)\n  }\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n    marginTop: theme.spacing(1),\n  },\n  mainGrid: {\n    width: '100vh'\n  },\n  innerGrid: {\n\n  }\n}))\n\nexport default useStyles","import React from 'react'\nimport { Grid, Paper } from '@material-ui/core'\n\nimport useStyles from './Style'\n\nconst ChatElement = ({ name, message }) => {\n\n  const classes = useStyles()\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2} className={classes.mainGrid}>\n          <Grid item className={classes.innerGrid} > {name} </Grid>\n          <Grid item> {message} </Grid>\n        </Grid>\n      </Paper>\n    </>\n  )\n}\n\nexport default ChatElement","import React from 'react'\nimport { useSelector } from \"react-redux\";\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nimport ChatElement from '../ChatElement/ChatElement'\nimport './Style.css'\n\nconst ChatContainer = () => {\n\n  const messages = useSelector((state) => state.chat)\n\n  return (\n    <ScrollToBottom className=\"messages\">\n      {messages.map(message => <ChatElement name={message.user?.fullName} message={message.message} />)}\n    </ScrollToBottom >\n  )\n}\n\nexport default ChatContainer","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n\n  textField: {\n    width: '50vh'\n  },\n}))\n\nexport default useStyles","import React from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport {\n  Box,\n  Button,\n  TextField,\n  FormHelperText\n} from \"@material-ui/core\";\n\nimport { createChatAction } from \"./../../../../redux/actions/chatActions\";\nimport { socket } from '../Chat'\nimport useStyles from './Style'\n\n\nconst InputForm = () => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const user = JSON.parse(localStorage.getItem('profile'))\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        message: '',\n      }}\n      validationSchema={\n        Yup.object().shape({\n          message: Yup.string().max(255).required('Message is required'),\n        })\n      }\n      onSubmit={(values, { resetForm }) => {\n        const messageData = {\n          room: user.result.company,\n          user: user.result,\n          message: values.message\n        }\n        socket.emit('send_message', messageData)\n        dispatch(createChatAction(messageData))\n\n        resetForm({ values: '' })\n      }}\n    >\n      {\n        ({ errors, handleBlur, handleChange, isSubmitting, touched, values, handleSubmit }) => (\n\n          <form onSubmit={handleSubmit}>\n            <TextField\n              className={classes.textField}\n              fullWidth\n              helperText={touched.message && errors.message}\n              placeholder=\"New Message\"\n              margin=\"normal\"\n              name=\"message\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"message\"\n              value={values.message}\n              variant=\"outlined\"\n            />\n            {Boolean(touched.policy && errors.policy) && (\n              <FormHelperText error> {errors.policy} </FormHelperText>\n            )}\n            <Box sx={{ py: 2 }}>\n              <Button color=\"primary\" fullWidth size=\"large\" type=\"submit\" variant=\"contained\"> Send </Button>\n            </Box>\n          </form>\n        )}\n    </Formik>\n  )\n}\n\nexport default InputForm","import { makeStyles } from '@material-ui/core/styles';\nimport { lime } from \"@material-ui/core/colors\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n    backgroundColor: lime[500],\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n  fullName: {\n    marginRight: theme.spacing(2),\n  },\n  profileLogo: {\n    alignContent: 'center',\n    marginTop: theme.spacing(2),\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    cursor: 'pointer',\n  },\n  profileName: {\n    alignContent: 'center',\n    marginTop: theme.spacing(2),\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    cursor: 'pointer',\n  },\n\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nexport default useStyles","import React, { useState } from 'react';\nimport { Link, useHistory, Switch, Route } from \"react-router-dom\";\nimport {\n  Drawer,\n  CssBaseline,\n  Toolbar,\n  List,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Avatar,\n  Grid,\n  Typography\n} from '@material-ui/core';\n\nimport RegistrationSuccess from '../Register/RegistrationSuccess/RegistrationSuccess'\nimport { EmployeesIcon } from '../../icons/EmployeesIcon'\nimport { RegisterIcon } from \"../../icons/RegisterIcon\"\nimport { SettingsIcon } from \"../../icons/SettingsIcon\"\nimport { AccountIcon } from \"../../icons/AccountIcon\"\nimport { ChatIcon } from \"../../icons/ChatIcon\"\nimport { TaskIcon } from '../../icons/TaskIcon'\nimport Employees from '../Employees/Employees'\nimport Register from \"../Register/Register\"\nimport Settings from \"../Settings/Settings\"\nimport Account from \"../Account/Account\"\nimport Task from '../Tasks/Tasks'\nimport Chat from '../Chat/Chat'\nimport useStyles from './Style'\n\nconst DashboardSidebar = () => {\n\n  const classes = useStyles()\n  const history = useHistory()\n\n  const icons = [TaskIcon, ChatIcon, EmployeesIcon, AccountIcon, RegisterIcon, SettingsIcon]\n  const settingField = ['Task', 'Chat', 'Employees', 'Register']\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer className={classes.drawer} variant=\"permanent\" classes={{ paper: classes.drawerPaper, }} >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <Divider />\n          <Grid className={classes.profileLogo}>\n            <Avatar component={Link} to='/main/account' className={classes.avatar} alt={user?.result?.name} src={user?.result?.photo} >{user?.result?.fullName.charAt(0).toUpperCase()}</Avatar>\n          </Grid>\n          <Grid className={classes.profileName}>\n            <Typography className={classes.fullName} variant='h6'>{user?.result?.fullName}</Typography>\n          </Grid>\n          {settingField.map((fieldName, index) => (\n            (history.location.pathname.split('/')[2] === fieldName.toLowerCase())\n              ? <List key={fieldName}  >\n                <ListItem selected className={classes.link} button component={Link} to={`/main/${fieldName.toLowerCase()}`}>\n                  <ListItemIcon>{icons[index]}</ListItemIcon>\n                  <ListItemText primary={fieldName} />\n                </ListItem>\n              </List>\n              : <List key={fieldName}  >\n                <ListItem className={classes.link} button component={Link} to={`/main/${fieldName.toLowerCase()}`}>\n                  <ListItemIcon>{icons[index]}</ListItemIcon>\n                  <ListItemText primary={fieldName} />\n                </ListItem>\n              </List>\n          ))\n          }\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <Switch>\n          <Route path='/main/task' render={() => <Task />} />\n          <Route path='/main/chat' render={() => <Chat />} />\n          <Route path='/main/employees' render={() => <Employees />} />\n          <Route path='/main/account' render={() => <Account />} />\n          <Route path='/main/register' render={() => <Register />} />\n          <Route path='/main/RegistrationSuccess' render={() => <RegistrationSuccess />} />\n          <Route path='/main/settings' render={() => <Settings />} />\n        </Switch>\n      </main>\n    </div >\n  );\n}\n\nexport default DashboardSidebar\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { lime } from '@material-ui/core/colors';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    logo: {\n      width: 40\n    },\n    avatar: {\n      marginRight: theme.spacing(2),\n      backgroundColor: lime[500],\n    },\n    fullName: {\n      marginRight: theme.spacing(2),\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  }),\n);\n\nexport default useStyles","\nimport React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport decode from 'jwt-decode';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton\n} from \"@material-ui/core\";\n\nimport { getTasksAction } from \"./../../../redux/actions/tasksActions\";\nimport { getUsersAction } from '../../../redux/actions/userActions';\nimport { authActions } from \"./../../../redux/actions/authActions\";\nimport logo from '../../images/logo.png'\nimport useStyles from './Style'\n\nconst DashboardNavbar = () => {\n\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n  const location = useLocation();\n\n  const handelLogo = () => {\n    history.push(`/main/${user.result.company.split(' ').join('').toLowerCase()}`)\n  }\n\n  const handelLogoutButton = () => {\n    localStorage.removeItem('profile')\n    dispatch(authActions.logout())\n    history.push('/home')\n  }\n\n  const logout = () => {\n    dispatch(authActions.logout())\n    // history.push('/');\n    // setUser(null);\n  };\n\n  useEffect(() => {\n    return dispatch(authActions.signIn(user))\n  })\n\n  useEffect(() => {\n    const token = user?.token;\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location, user?.token]);\n\n  useEffect(() => {\n    return dispatch(getUsersAction(user?.result?.company))\n  })\n\n  useEffect(() => {\n    return dispatch(getTasksAction(user?.result?.company))\n  })\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <img src={logo} alt='logo' className={classes.logo} onClick={handelLogo} />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}> CRM </Typography>\n          <Button variant='contained' color=\"secondary\" onClick={handelLogoutButton}>Log out</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default DashboardNavbar","import React from 'react'\n\nimport DashboardSidebar from \"./DashboardSidebar/DashboardSidebar\";\nimport DashboardNavbar from './DashboardNavbar/DashboardNavbar';\n\nconst Dashboard = () => {\n  return (\n    <>\n      <DashboardNavbar />\n      <DashboardSidebar />\n    </>\n  )\n}\n\nexport default Dashboard","import React, { useState } from 'react'\nimport Home from \"./components/LogInForm/Home/Home\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// import Pusher from 'pusher-js'\n\nimport Dashboard from \"./components/MainPage/Dashboard\";\n\nconst App = () => {\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n\n  // useEffect(() => {\n  //   const pusher = new Pusher('8d7a83069c1d1e1f1384', {\n  //     cluster: 'eu'\n  //   });\n\n  //   const channel = pusher.subscribe('message');\n  //   channel.bind('inserted', (newMessage) => {\n  //     alert(JSON.stringify(newMessage));\n  //   });\n\n  //   return () => {\n  //     channel.unbind_all()\n  //     channel.unsubscribe()\n  //   }\n  // }, [])\n\n  return (\n    <Switch>\n      <Route exact path='/' render={() => {\n        return !user?.token ? <Redirect to={'/home'} /> : <Redirect to={'/main'} />\n      }} />\n      <Route path='/home' render={() => <Home />} />\n      <Route path='/main' render={() => <Dashboard />} />\n    </Switch>\n  )\n}\n\nexport default App\n","const initialState = {\n  result: {},\n  token: \"\"\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SIGN_UP\":\n    case \"SIGN_IN\": {\n      localStorage.setItem('profile', JSON.stringify({ ...action.formData }))\n      return { ...state, ...action.formData }\n    }\n    case 'UPDATE_USER': {\n      return {\n        ...state,\n        result: {\n          ...state.result,\n          ...action.updatedInfo\n        }\n      }\n    }\n    case 'LOGOUT': {\n      return {\n        result: {},\n        token: \"\"\n      }\n    }\n    default:\n      return { ...state }\n  }\n}\n\nexport default authReducer\n","const initialState = []\n\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_TASK': {\n      return [\n        ...state,\n        { ...action.formData }\n      ]\n    }\n    case 'GET_TASKS': {\n      return [\n        ...action.tasks\n      ]\n    }\n    case 'UPDATE_TASK': {\n      const index = state.map(elem => elem._id === action.formData._id).indexOf(true)\n      const newArray = [...state]\n      newArray.splice(index, 1, action.formData)\n      return [\n        ...newArray\n      ]\n    }\n    case 'LOGOUT': {\n      return []\n    }\n    default: {\n      return [\n        ...state\n      ]\n    }\n  }\n}\n\nexport default taskReducer\n","const initialState = []\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_USERS': {\n      return [\n        ...action.users\n      ]\n    }\n    case 'LOGOUT': {\n      return []\n    }\n    default:\n      return [\n        ...state\n      ]\n  }\n}\n\nexport default usersReducer\n","const initialState = {\n  updateTaskId: \"\"\n}\n\nconst updateTaskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'UPDATE_TASK_ID': {\n      return {\n        ...state,\n        updateTaskId: action.id\n      }\n    }\n    case 'LOGOUT': {\n      return {\n        updateTaskId: \"\"\n      }\n    }\n    default: {\n      return {\n        ...state\n      }\n    }\n  }\n}\n\nexport default updateTaskReducer\n","const initialState = []\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_CHAT': {\n      return [\n        ...state,\n        action.chatData\n      ]\n    }\n    case 'GET_CHAT': {\n      return [\n        ...state,\n        ...action.chat\n      ]\n    }\n    case 'LOGOUT': {\n      return []\n    }\n    default:\n      return [\n        ...state\n      ]\n  }\n}\n\nexport default chatReducer\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport authReducer from \"../reducers/authReducer\";\nimport taskReducer from \"../reducers/taskReducer\";\nimport usersReducer from \"../reducers/usersReducer\";\nimport updateTaskReducer from \"../reducers/updatedTaskId\";\nimport chatReducer from \"../reducers/chatReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  tasks: taskReducer,\n  users: usersReducer,\n  updateTaskId: updateTaskReducer,\n  chat: chatReducer,\n})\n\n// type RootReducerType = typeof rootReducer\n\n// export type AppStateType = ReturnType<RootReducerType>\n\n// export type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\n\n// export type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\n\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport App from './App'\nimport store from \"./redux/store/store\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>, document.getElementById('root'))"],"sourceRoot":""}